from fastapi import HTTPException, status, APIRouter, Dependsfrom fastapi.security.oauth2 import OAuth2PasswordRequestFormfrom ..database import dbfrom .. import squema,utils, oauth2router = APIRouter(    tags= ['Authentication'])@router.post('/login', response_model=squema.Token)def  login_user (user_Credentials:OAuth2PasswordRequestForm = Depends()):    id = user_Credentials.username    ref_user = db.collection('users').document(id)    if not ref_user.get().exists:        raise HTTPException(status_code=status.HTTP_403_FORBIDDEN,                            detail=f'user id: {id} was not found')    user_Dict = ref_user.get().to_dict()    hashed_password = user_Dict['password']    if not utils.verify(user_Credentials.password, hashed_password):        raise HTTPException(status_code=status.HTTP_403_FORBIDDEN,                            detail='Invalid Credentials')    access_token = oauth2.create_access_token(data={'user_id':id})        return {'access_token':access_token,            'token_type':'bearer'            }